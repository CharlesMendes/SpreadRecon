@model IEnumerable<starkdev.spreadrecon.model.ResultadoProcessamento>

@{
    ViewBag.Titulo = "Pagamentos Conciliados";
    ViewBag.TituloPagina = "Pagamentos Conciliados";
    ViewBag.AcaoTabela = "Ações";
}

<div class="row">
    <div class="col-md-12 col-sm-12 col-xs-12">
        <div class="x_panel">
            <div class="x_title">
                <h2>@ViewBag.TituloPagina</h2>
                <ul class="nav navbar-right panel_toolbox">
                    <li>
                        <a class="collapse-link"><i class="fa fa-chevron-up"></i></a>
                    </li>
                    <li>
                        <a class="close-link"><i class="fa fa-close"></i></a>
                    </li>
                </ul>
                <div class="clearfix"></div>
            </div>
            <div class="x_content">
                <!-- start accordion -->
                <div class="accordion" id="accordion1" role="tablist" aria-multiselectable="true">
                    <div class="panel">
                        <div id="collapseOne1" class="panel-collapse collapse in" role="tabpanel" aria-labelledby="headingOne">
                            <div class="panel-body">
                                <table id="datatable-pagination" class="table table-striped">
                                    <thead>
                                        <tr>
                                            <th>@Html.DisplayNameFor(model => model.nomeCicloPagamento)</th>
                                            <th>@Html.DisplayNameFor(model => model.importacaoPlanilhaVendasViva.loja.nomeLoja)</th>
                                            <th>@Html.DisplayNameFor(model => model.idImportacaoPlanilhaVendasViva)</th>
                                            <th>@Html.DisplayNameFor(model => model.nomeArquivoOriginalVendasViva)</th>
                                            <th>@Html.DisplayNameFor(model => model.idImportacaoPlanilhaPagamentoOperadora)</th>
                                            <th>@Html.DisplayNameFor(model => model.nomeArquivoOriginalPagamentoOperadora)</th>
                                            <th>@Html.DisplayNameFor(model => model.totalPagamentoOperadora)</th>
                                            <th>@Html.DisplayNameFor(model => model.dataResultadoProcessamento)</th>
                                            <th>@Html.DisplayNameFor(model => model.status.nomeStatus)</th>
                                            <th>@ViewBag.AcaoTabela</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var item in Model)
                                        {
                                            <tr>
                                                <th scope="row">@Html.DisplayFor(modelItem => item.nomeCicloPagamento)</th>
                                                <td>@Html.DisplayFor(modelItem => item.importacaoPlanilhaVendasViva.loja.nomeLoja)</td>
                                                <td>@Html.DisplayFor(modelItem => item.idImportacaoPlanilhaVendasViva)</td>
                                                <td>@Html.DisplayFor(modelItem => item.nomeArquivoOriginalVendasViva)</td>
                                                <td>@Html.DisplayFor(modelItem => item.idImportacaoPlanilhaPagamentoOperadora)</td>
                                                <td>@Html.DisplayFor(modelItem => item.nomeArquivoOriginalPagamentoOperadora)</td>
                                                <td>@Html.DisplayFor(modelItem => item.totalPagamentoOperadora)</td>
                                                <td>@Html.DisplayFor(modelItem => item.dataResultadoProcessamento)</td>
                                                <td>@Html.DisplayFor(modelItem => item.status.nomeStatus)</td>
                                                <td>
                                                    @if (item.idStatus.Equals(6) || item.idStatus.Equals(7) || item.idStatus.Equals(8))
                                                    {
                                                        //Se status for nao conciliado, conciliado ou pendente conciliação, exibe botão para excluir a importação
                                                        <a href="@Url.Action("ExcluirProcessamento", "ConciliacaoPagamento", new { idVendas = item.idImportacaoPlanilhaVendasViva, idOperadora = item.idImportacaoPlanilhaPagamentoOperadora })" class="btn btn-danger btn-xs"><i class="fa fa-trash-o"></i></a>
                                                    }
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
                <!-- end of accordion -->
            </div>
        </div>
    </div>
</div>
